// Code generated by github.com/yimincai/enumgo; DO NOT EDIT.

package example

import (
	"fmt"
	"strings"
)

// Animal Type Enum
type Animal string

const (
	// Small domesticated feline
	Animal_Cat Animal = "CAT"
	// Loyal domestic animal
	Animal_Dog Animal = "DOG"
	// Large mammal with a trunk
	Animal_Elephant Animal = "ELEPHANT"
	// Big wild cat
	Animal_Tiger Animal = "TIGER"
	// Marsupial native to Australia
	Animal_Koala Animal = "KOALA"
)

var animalToString = map[Animal]string{
	Animal_Cat:      "cat",
	Animal_Dog:      "dog",
	Animal_Elephant: "elephant",
	Animal_Tiger:    "tiger",
	Animal_Koala:    "koala",
}

var stringToAnimal = map[string]Animal{
	"cat":      Animal_Cat,
	"dog":      Animal_Dog,
	"elephant": Animal_Elephant,
	"tiger":    Animal_Tiger,
	"koala":    Animal_Koala,
}

func (e Animal) String() string {
	return animalToString[e]
}

func (e Animal) IsValid() bool {
	_, ok := animalToString[e]
	return ok
}

func ParseAnimalString(s string) (Animal, error) {
	if val, ok := stringToAnimal[strings.ToLower(s)]; ok {
		return val, nil
	}
	return "", fmt.Errorf("invalid Animal: %s", s)
}

func AnimalOptions() []Animal {
	return []Animal{
		Animal_Cat,
		Animal_Dog,
		Animal_Elephant,
		Animal_Tiger,
		Animal_Koala,
	}
}
